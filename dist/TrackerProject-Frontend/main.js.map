{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/server-error/server-error.component.css","webpack:///./src/app/server-error/server-error.component.html","webpack:///./src/app/server-error/server-error.component.ts","webpack:///./src/app/socket.service.ts","webpack:///./src/app/sort-by.pipe.ts","webpack:///./src/app/sort-countries.pipe.ts","webpack:///./src/app/tracker/dashboard/dashboard.component.css","webpack:///./src/app/tracker/dashboard/dashboard.component.html","webpack:///./src/app/tracker/dashboard/dashboard.component.ts","webpack:///./src/app/tracker/issue-view/issue-view.component.css","webpack:///./src/app/tracker/issue-view/issue-view.component.html","webpack:///./src/app/tracker/issue-view/issue-view.component.ts","webpack:///./src/app/tracker/tracker-route-guard.service.ts","webpack:///./src/app/tracker/tracker.module.ts","webpack:///./src/app/user/email-verify/email-verify.component.css","webpack:///./src/app/user/email-verify/email-verify.component.html","webpack:///./src/app/user/email-verify/email-verify.component.ts","webpack:///./src/app/user/forgot-password/forgot-password.component.css","webpack:///./src/app/user/forgot-password/forgot-password.component.html","webpack:///./src/app/user/forgot-password/forgot-password.component.ts","webpack:///./src/app/user/login/login.component.css","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/reset-password/reset-password.component.css","webpack:///./src/app/user/reset-password/reset-password.component.html","webpack:///./src/app/user/reset-password/reset-password.component.ts","webpack:///./src/app/user/signup/signup.component.css","webpack:///./src/app/user/signup/signup.component.html","webpack:///./src/app/user/signup/signup.component.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)","webpack:///fs (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n<ng4-loading-spinner [loadingText]=\\\"'Please wait...'\\\"></ng4-loading-spinner>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TrackerProject-Frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { TrackerModule } from './tracker/tracker.module';\nimport { UserModule } from './user/user.module';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './user/login/login.component';\n\nimport { FormsModule } from '@angular/forms';\n\n//for Http service\nimport { HttpClientModule } from '@angular/common/http';\n\n//for toast message\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SortCountriesPipe } from './sort-countries.pipe';\n\n\n//import statement to use font awesome library\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\n\n//for loading spinner\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\n\nimport { AppService } from './app.service';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ServerErrorComponent } from './server-error/server-error.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SortCountriesPipe,\n    PageNotFoundComponent,\n    ServerErrorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    TrackerModule,\n    UserModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    Ng4LoadingSpinnerModule.forRoot(),\n    HttpClientModule,\n    AngularFontAwesomeModule,\n    UserModule,\n    FormsModule,\n    TrackerModule,\n    RouterModule.forRoot([\n      { path: 'login', component: LoginComponent, pathMatch: 'full' },\n      { path:'page-not-found', component: PageNotFoundComponent},\n      { path:'server-error', component:ServerErrorComponent},\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\n      { path: '*', component: LoginComponent },\n      { path: '**', component: LoginComponent }\n    ])\n  ],\n  providers: [SortCountriesPipe,AppService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n//for using cookies\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n//Importing the required files for http services.\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n//import { Observable } from 'rxjs';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  private url =  'api-issuetracker.emayurm.in.net';\n\n  private baseURL = `${this.url}/api/v1`;\n\n\n\n  constructor(\n    public http: HttpClient\n  ) { }\n\n\n  public getUserInfoFromLocalstorage = () => {\n\n    return JSON.parse(localStorage.getItem('userInfo'));\n\n  } // end getUserInfoFromLocalstorage\n\n\n  public setUserInfoInLocalStorage = (data) =>{\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n\n\n  }\n\n  public signinFunction(data): Observable<any> {\n    \n    const params = new HttpParams()\n      .set('email', data.email)\n      .set('password', data.password);\n      \n    return this.http.post(`${this.url}/api/v1/users/login`, params);\n  } // end of signinFunction function.\n\n\n\n  //Method to get country list\n  public getCountryList=()=>{\n    let response=this.http.get('../assets/countries.json');\n    return response;\n  }//end\n\n  //method to get country code\n  public getCountryCode=()=>{\n    let response=this.http.get('../assets/country-code-list.json');\n    return response;\n  }//end\n\n\n  public signupFunction(data): Observable<any> {\n\n    const params = new HttpParams()\n      .set('firstName', data.firstName)\n      .set('lastName', data.lastName)\n      .set('mobileNumber', data.mobileNumber)\n      .set('email', data.email)\n      .set('password', data.password)\n      .set('country',data.country)\n\n    return this.http.post(`${this.url}/api/v1/users/signup`, params);\n\n  } // end of signupFunction function.\n\n\n    //Method to verify email\n    public verifyEmail = (data): Observable<any> => {\n      return this.http.get(`${this.url}/api/v1/users/${data}/verifyUser`);\n    }\n    //end method\n  \n    public sendResetLink(email): Observable<any> {\n        // console.log(this.url+\"/api/v1/users/forgotPassword\");\n          const params = new HttpParams()\n          .set('email', email)\n          return this.http.post(`${this.url}/api/v1/users/forgotPassword`,params);\n    } // end of sendResetLink function.\n   \n  \n    public resetPassword(data: any): Observable<any> {\n      const params = new HttpParams()\n        .set('userId', data.userId)\n        .set('password', data.password);\n      return this.http.post(`${this.url}/api/v1/users/resetPassword`, params);\n  \n    }//end resetPassword Function\n\n\n    //Get All Users:\n    public getAllpeople = (token): Observable<any> => {\n      return this.http.get(`${this.baseURL}/users/view/allUsers?authToken=${token}`)\n    }\n\n\n\n\n    //Method to get All issues\n    public getIssues = (token): Observable<any> => {\n      return this.http.get(`${this.url}/api/v1/issues/allIssues?authToken=${token}`);\n    }\n    //end method\n\n\n    //Creating a new Issue:\n    public createIssue = (data,token): Observable<any> => {\n      const params = new HttpParams()\n        .set(\"issueTitle\", data.issueTitle)\n        .set(\"reporterId\", data.reporterId)\n        .set(\"reporterName\",data.reporterName)\n        .set(\"status\",data.status)\n        .set(\"description\",data.description)\n        .set(\"attachments\",data.attachments)\n        .set(\"assignee\",data.assignee)\n\n        return this.http.post(`${this.baseURL}/issues/registerIssue?authToken=${token}`, params)\n    }\n\n    //Method to get single issue details\n    public getIssue = (issueId,token): Observable<any> => {\n      return this.http.get(`${this.url}/api/v1/issues/${issueId}/getIssue?authToken=${token}`);\n    }\n    //end method\n\n    //Method to edit issue title\n    public editIssue = (data,token) : Observable<any> => {\n      const params = new HttpParams()\n      .set('issueTitle', data.issueTitle)\n      .set('status', data.status)\n      .set('description', data.description)\n      .set('assignee', data.assignee);\n      return this.http.put(`${this.baseURL}/issues/${data.issueId}/editIssue?authToken=${token}`,params);\n\n    }\n\n\n    //add a new comment to issue:\n    public addComment = (data,token) : Observable<any> => {\n      const params = new HttpParams()\n        .set(\"issueId\", data.issueId)\n        .set(\"userId\", data.userId)\n        .set(\"userName\",data.userName)\n        .set(\"comment\",data.comment)\n        return this.http.post(`${this.baseURL}/comments/addComment?authToken=${token}`, params)\n    }\n\n\n    //Method to get all comments on Issue\n    public getAllCommentOnIssue = (issueId,token): Observable<any> => {\n      return this.http.get(`${this.baseURL}/comments/${issueId}/getCommentsOnIssue?authToken=${token}`);\n    }\n    //end method\n\n\n\n\n\n    public logout(): Observable<any> {\n      const params = new HttpParams()\n      .set('authToken', Cookie.get('authToken'));\n\n      return this.http.post(`${this.baseURL}/users/logout`,params);\n  \n    } // end logout function\n  \n\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <div>\\n    <div class=\\\"row mt-5\\\">\\n      <div class=\\\"col-12\\\">\\n        <img src=\\\"../../assets/not_found.jpg\\\" style=\\\"width:102vmin;height:52vmin\\\"\\n          class=\\\"img-fluid d-block mx-auto\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"row mt-4\\\">\\n      <div class=\\\"col-12 text-center\\\">\\n          <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n              User not available, with given email address\\n          </div>\\n        <h5 class=\\\"text-danger\\\">Create account, \\n          <a [routerLink]=\\\"['/signup']\\\">Signup</a>\\n        </h5>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <div>\\n    <div class=\\\"row mt-5\\\">\\n      <div class=\\\"col-12\\\">\\n        <img src=\\\"https://i.stack.imgur.com/QQOcg.jpg\\\" style=\\\"width:102vmin;height:52vmin\\\"\\n          class=\\\"img-fluid d-block mx-auto\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"row mt-4\\\">\\n      <div class=\\\"col-12 text-center\\\">\\n        <h5 class=\\\"text-danger\\\">Try Again after email verification\\n            <a [routerLink]=\\\"['/login']\\\">Redirect to Login</a>\\n        </h5>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { Observable } from 'rxjs';\nimport * as io from 'socket.io-client';\n\nimport { Cookie } from 'ng2-cookies';\n\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpErrorResponse, HttpParams } from \"@angular/common/http\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n\n  public baseurl = \"api-issuetracker.emayurm.in.net\"\n  public socket;\n\n\n  constructor(public http: HttpClient) { \n    this.socket = io(this.baseurl)\n  }\n\n\n  //Authentication Section:\n\n  public verifyUser = () =>{\n    return Observable.create((observer)=>{\n      this.socket.on(\"verify-user\",(socketData)=>{\n        observer.next(socketData)\n      })\n    })\n  }\n\n  public setUser = (token) => {\n    this.socket.emit(\"set-user\", token)\n  }\n\n\n  public onlineUserList = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on(\"onlineUsers\", (userList) => {\n\n        observer.next(userList);\n\n      }); // end Socket\n\n    }); // end Observable\n\n  } // end onlineUserList\n\n\n\n\n  //list create socket service for multi user\n  public createIssue = (userName) => {\n    this.socket.emit(\"createIssue\",userName)\n  }\n\n  public issueAddedResponse = ()=>{\n    return Observable.create((observer)=>{\n      this.socket.on(\"createIssue-res\",(data)=>{\n        observer.next(data);\n        console.log(data);\n      })\n    })\n  }\n\n\n  //issue title update(edit) respose\n\n  public updateIssue =(userName)=>{\n    this.socket.emit(\"updateIssue\",userName)\n  }\n\n  public issueUpdatedResponse = () => {\n    return Observable.create((observer)=>{\n      this.socket.on(\"updateIssue-res\",(data)=>{\n        observer.next(data);\n      })\n    })\n  }\n\n\n  //comments on issue response\n\n  public addComment =(userName)=>{\n    this.socket.emit(\"addComment\",userName)\n  }\n\n  public commentAddedResponse = () => {\n    return Observable.create((observer)=>{\n      this.socket.on(\"addComment-res\",(data)=>{\n        observer.next(data);\n      })\n    })\n  }\n\n\n  /*\n  public disconnect = () => {\n    return Observable.create((observer) => {\n      this.socket.on('disconnect', () => {\n        observer.next();\n      });//end On method\n    });//end observable\n\n  }//end disconnect\n  */\n\n  public disconnectedSocket = () => {\n\n    this.socket.emit(\"disconnect\",\"\");//end Socket\n\n  }//end disconnectedSocket\n\n  public exitSocket = () =>{\n\n    this.socket.disconnect();\n\n  }// end exit socket\n\n\n\n\n\n\n  /**\n   * Issue watch functionality\n   */\n\n   //Add As Watcher:\n\n  public addAsWatcher=(data)=>{\n    this.socket.emit(\"watch\",data);\n  }\n\n  public responseAlreadyWatcher=()=>{\n    return Observable.create((observer)=>{\n      this.socket.on(\"alreadyWatcher\",(data)=>{\n        observer.next(data);\n      })\n    })\n  }\n\n  public save_watch=()=>{\n    return Observable.create((observer)=>{\n      this.socket.on(\"savewatch\",(data)=>{\n        observer.next(data);\n      })\n    })\n  }\n\n\n\n\n\n\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sortBy'\n})\nexport class SortByPipe implements PipeTransform {\n\n  transform(value:any[],orderType:boolean,field:String): any[] {\n    if(value!=undefined){\n\n      value.sort((a:any, b:any ) => {//calling Array.sort method by passing the custom comparator to it.\n\n        let temp1 :any;\n        let temp2 :any;\n\n        if(field==\"status\"){\n            temp1 = a.status;\n            temp2 = b.status;\n        }else if(field==\"issueTitle\"){\n            temp1 = a.issueTitle;\n            temp2 = b.issueTitle;\n        }else if(field==\"reporterName\"){\n            temp1 = a.reporterName;\n            temp2 = b.reporterName;\n        }else if(field==\"reportedOn\"){\n            let date1 = new Date(a.reportedOn);\n            temp1 = date1.getTime();\n            //console.log(temp1)\n            let date2=new Date(b.reportedOn)\n            temp2 = date2.getTime();\n            //console.log(temp2)\n        }else{\n\n        }\n\n      \n        if( temp1 == undefined && temp2 == undefined ) return 0;//cheching for undefined values.\n        if( temp1 == undefined && temp2 != undefined ) return orderType ? 1: -1;\n        if( temp1 != undefined && temp2 == undefined ) return orderType ? -1: 1;\n        if( temp1 == temp2) return 0;//equality check\n\n        //checking for the lesser or greater value and arranging accordingly.\n        return orderType ? (temp1.toString().toLowerCase() > temp2.toString().toLowerCase()? -1 :1):(temp2.toString().toLowerCase() > temp1.toString().toLowerCase()? -1 :1);\n      });\n\n     return value;//finally returning the sorted array to the view for display.\n\n\n\n    }else{\n      \n    }\n\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sortCountries'\n})\nexport class SortCountriesPipe implements PipeTransform {\n\n  transform(array: Array<object>,args?: any): any {\n  \n    if (array == null) {\n      return null;\n    }\n    let finalArray=array.sort((a,b)=>{\n     \n      let textA=a['value'].toLowerCase();\n      let textB=b['value'].toLowerCase();\n      return textA<textB ?-1 : (textA>textB)? 1:0;\n\n    });\n    return finalArray;\n  }\n}\n","module.exports = \"  table {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  th.mat-sort-header-sorted {\\r\\n    color: black;\\r\\n  }\\r\\n\\r\\n  .header{\\r\\n    background-color:#db5964;\\r\\n    color: white;\\r\\n    padding: 2%;\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n  .navbar{\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .user{\\r\\n    background-color:#4eb9c7;\\r\\n    color:black;\\r\\n    padding:5%;\\r\\n    display:block;\\r\\n    width:100%;\\r\\n    font-size:1.2em;\\r\\n    text-align:center;\\r\\n    font-family:sans-serif;\\r\\n  }\\r\\n\\r\\n  .fasquare{\\r\\n    float: center;\\r\\n    margin-top:3%;\\r\\n  }\\r\\n\\r\\n  .fasquare:hover{\\r\\n    color:rgb(22, 83, 37);\\r\\n    cursor:pointer;\\r\\n  }\\r\\n\\r\\n  .aside{\\r\\n    background:  #f5f5f5;\\r\\n    overflow:auto;\\r\\n    margin-top:2%;\\r\\n  }\\r\\n\\r\\n  .aside1{\\r\\n    overflow:auto;\\r\\n    margin-top:2%;\\r\\n  }\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"col-12 header\\\">\\n        <h1>Issue Tracker Tool</h1>\\n    </div>\\n    <!--Navigation Bar-->\\n\\n    <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\"\\n            aria-label=\\\"Toggle navigation\\\">\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n            <ul class=\\\"navbar-nav\\\">\\n\\n                <li class=\\\"nav-item\\\">\\n                    <b><a class=\\\"nav-link\\\" (click)=logout()>Logout</a></b>\\n                </li>\\n\\n            </ul>\\n        </div>\\n    </nav>  \\n\\n\\n\\n\\n\\n    <!--Modal to register issue-->\\n\\n    <div id=\\\"myModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\"  tabindex=\\\"-1\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header text-center\\\">\\n                    <h4 class=\\\"modal-title w-100 font-weight-bold\\\">Register Issue</h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                </div>\\n                <div class=\\\"modal-body mx-3\\\">\\n\\n                    <div class=\\\"md-form mb-5\\\">\\n                      <label data-error=\\\"wrong\\\" data-success=\\\"right\\\">Issue Title</label>\\n                      <input  [(ngModel)]=\\\"issueTitle\\\" type=\\\"Title\\\" class=\\\"form-control validate\\\" required>\\n                    </div>\\n    \\n                    <div class=\\\"md-form mb-4\\\">\\n                        <label data-error=\\\"wrong\\\"  for=\\\"inputGroupSelect01\\\" data-success=\\\"right\\\">Status</label>\\n                        <!--\\n                        <input [(ngModel)]=\\\"status\\\"  type=\\\"status\\\" class=\\\"form-control validate\\\">\\n                        -->\\n                        <select  [(ngModel)]=\\\"status\\\" class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" required>\\n                            <option selected>Choose...</option>\\n                            <option value=\\\"backlog\\\">backlog</option>\\n                            <option value=\\\"in-progress\\\">in-progress</option>\\n                            <option value=\\\"in-test\\\">in-test</option>\\n                            <option value=\\\"done\\\">done</option>\\n                        </select>\\n\\n                    </div>\\n\\n\\n                          \\n                    <div class=\\\"md-form mb-4\\\">\\n                        <label data-error=\\\"wrong\\\" data-success=\\\"right\\\">description</label>\\n                        <!--\\n                        <textarea [(ngModel)]=\\\"description\\\"  type=\\\"description\\\" class=\\\"form-control validate\\\"></textarea>\\n                        -->\\n                        <app-ngx-editor [placeholder]=\\\"'Enter description here...'\\\" [spellcheck]=\\\"true\\\" [(ngModel)]=\\\"description\\\"></app-ngx-editor>\\n\\n                    </div>\\n\\n\\n                    <div class=\\\"md-form mb-4\\\">\\n                            <label data-error=\\\"wrong\\\"  for=\\\"inputGroupSelect01\\\" data-success=\\\"right\\\">Assignee</label>\\n                            <!--\\n                            <input [(ngModel)]=\\\"status\\\"  type=\\\"status\\\" class=\\\"form-control validate\\\">\\n                            -->\\n                            <select  [(ngModel)]=\\\"assignee\\\" class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" required>\\n                                    <option selected>Choose...</option>\\n                                    <!--\\n                                        <option  *ngFor=\\\"let user of users1\\\" value=\\\"{{user.firstName}} {{user.lastName}}\\\">\\n                                            <p *ngIf=\\\"user.firstName+' '+user.lastName!=fullName\\\">{{user.firstName}} {{user.lastName}}</p>\\n                                        </option>\\n                                    -->    \\n\\n                                    <option  *ngFor=\\\"let user of users2\\\" value=\\\"{{user.firstName}} {{user.lastName}}\\\">\\n                                        <p>{{user.firstName}} {{user.lastName}}</p>\\n                                    </option>\\n                            </select>\\n    \\n                    </div>\\n\\n\\n\\n                    <div class=\\\"md-form mb-4\\\">\\n                            <label data-error=\\\"wrong\\\"  for=\\\"inputGroupSelect01\\\" data-success=\\\"right\\\">Attachments</label>\\n                            <input type=\\\"file\\\" (change)=\\\"fileEvent($event)\\\" name=\\\"imageUpload\\\" id=\\\"imageUpload\\\"/>\\n\\n                    </div>\\n\\n\\n\\n                    \\n                </div>\\n                <div class=\\\"modal-footer d-flex justify-content-center\\\">\\n                    <button class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" (click)=\\\"newIssue()\\\">Create Issue</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n\\n    <!--Modal to show issues repoted by me-->\\n\\n    <div id=\\\"myModal1\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\"  tabindex=\\\"-1\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n            <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n                <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header text-center\\\">\\n                        <h4 class=\\\"modal-title w-100 font-weight-bold\\\">Issues Reported by Me</h4>\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\n                        </button>\\n                    </div>\\n\\n\\n                    <div>\\n\\n                        <table class=\\\"table table-dark\\\">\\n                            <thead>\\n                            <tr>\\n                                <th scope=\\\"col\\\">Status</th>\\n                                <th scope=\\\"col\\\">Title</th>\\n                                <th scope=\\\"col\\\">Reporter</th>\\n                                <th scope=\\\"col\\\">Date</th>\\n                            </tr>\\n                            </thead>\\n                            <tbody *ngFor=\\\"let issue of reportedIssue;\\\">\\n                            <tr style=\\\"cursor: pointer;\\\" routerLink=\\\"/issueDetails/{{issue.issueId}}\\\"  data-dismiss=\\\"modal\\\">\\n                                <td>{{issue.status}}</td>\\n                                <td>{{issue.issueTitle}}</td>\\n                                <td>{{issue.reporterName}}</td>\\n                                <td>{{issue.reportedOn|date}}</td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n        \\n                    </div>\\n            \\n            \\n\\n\\n\\n\\n\\n\\n\\n                </div>\\n            </div>\\n    </div>\\n\\n\\n    <!--Modal to show issues related to other users-->\\n\\n    <div id=\\\"myModal2\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\"  tabindex=\\\"-1\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header text-center\\\">\\n                    <h4 class=\\\"modal-title w-100 font-weight-bold\\\">Other Issues</h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                </div>\\n\\n\\n                <div>\\n\\n                    <table class=\\\"table table-dark\\\">\\n                        <thead>\\n                        <tr>\\n                            <th scope=\\\"col\\\">Status</th>\\n                            <th scope=\\\"col\\\">Title</th>\\n                            <th scope=\\\"col\\\">Reporter</th>\\n                            <th scope=\\\"col\\\">Date</th>\\n                        </tr>\\n                        </thead>\\n                        <tbody *ngFor=\\\"let issue of otherUsersRealatedIssue;\\\">\\n                        <tr style=\\\"cursor: pointer;\\\" routerLink=\\\"/issueDetails/{{issue.issueId}}\\\"  data-dismiss=\\\"modal\\\">\\n                            <td>{{issue.status}}</td>\\n                            <td>{{issue.issueTitle}}</td>\\n                            <td>{{issue.reporterName}}</td>\\n                            <td>{{issue.reportedOn|date}}</td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n    \\n                </div>\\n\\n\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3 aside\\\">\\n          <span class=\\\"user\\\" >\\n              <b> Welcome! {{fullName}}</b><br>\\n              <small style=\\\"font-weight:bold;\\\">Issue Tracker Tool</small>\\n          </span>\\n          <div col-sm-12>\\n              \\n              <button type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\" class=\\\"btn btn-success fasquare\\\">New Issue</button>\\n\\n                <br><br>\\n              <form class=\\\"form-inline\\\" #myForm=\\\"ngForm\\\" class=\\\"row\\\">\\n                <div class=\\\"form-group  col-md-8\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control btn-outline-success\\\" name=\\\"filterName\\\" [(ngModel)]=\\\"filterName.issueTitle\\\" placeholder=\\\"Search by Issue Title\\\" />\\n                </div>\\n              </form>\\n              \\n              <br><br>\\n\\n              <button type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal1\\\" class=\\\"btn btn-danger fasquare\\\">Repotered by me</button><br>\\n\\n              <button type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal2\\\" class=\\\"btn btn-danger fasquare\\\">Other Issues</button>\\n\\n\\n          </div>\\n          <hr class=\\\"lead\\\">      \\n      </div>\\n\\n      <div class=\\\"table-responsive col-md-9 aside1\\\">\\n          <div>\\n\\n                <h2>Issues Assigned to me </h2>\\n                <table class=\\\"table table-dark\\\">\\n                  <thead>\\n                    <tr>\\n                      <th scope=\\\"col\\\">Status <i class=\\\"fa fa-sort\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"changeOrder('status')\\\"></i></th>\\n                      <th scope=\\\"col\\\">Title <i class=\\\"fa fa-sort\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"changeOrder('issueTitle')\\\"></i></th>\\n                      <th scope=\\\"col\\\">Reporter <i class=\\\"fa fa-sort\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"changeOrder('reporterName')\\\"></i></th>\\n                      <th scope=\\\"col\\\">Date <i class=\\\"fa fa-sort\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"changeOrder('reportedOn')\\\"></i></th>\\n                    </tr>\\n                  </thead>\\n                  <tbody *ngFor=\\\"let issue of assignedIssue | sortBy: sortOrder : field   | filterBy: filterName | paginate: { itemsPerPage: 5, currentPage: p };\\\">\\n                    <tr  style=\\\"cursor: pointer;\\\" routerLink=\\\"/issueDetails/{{issue.issueId}}\\\">\\n                      <td>{{issue.status}}</td>\\n                      <td>{{issue.issueTitle}}</td>\\n                      <td>{{issue.reporterName}}</td>\\n                      <td>{{issue.reportedOn|date:'medium'}}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <pagination-controls style=\\\"float:right\\\" (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n\\n\\n\\n          </div>\\n\\n\\n\\n\\n\\n\\n      </div>\\n\\n\\n    </div>\\n\\n\\n</div>\\n\\n\\n\\n\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\n\nimport { Cookie } from 'ng2-cookies';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n\nimport { AppService } from '../../app.service';\nimport { SocketService } from './../../socket.service'\n\n//file upload by browse\n\nimport *as AWS from 'aws-sdk'\n\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  providers: [SocketService]\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n\n\n  otherUsersRealatedIssue: any=[];\n  reportedIssue: any=[];\n  assignedIssue: any=[];\n  public data: any;\n  public image1: any;\n  public image: any;\n  public issueDetails: any;\n  public users: any;\n  public users1: any;\n  public users2:any=[];\n\n\n  p: number = 1;\n\n  q: number = 1;\n\n\n  public userId: any;\n  public fullName: any;\n  public token: any;\n\n  public issueTitle: any;\n  public status: any;\n  public description: any;\n  public attachments: any;\n  public assignee: any;\n\n  public newIssueStatus: any\n\n  public newIssueId: any;\n\n  public AllIssues: any;\n\n  //for sorting\n  public sortOrder: boolean = false;\n  public field: String;\n\n\n  //for filter\n  public filterName: any = { issueTitle: '' };\n\n\n\n  //for selecting files\n  public selectedFiles: any = []\n\n  constructor(public socketService: SocketService, public appService: AppService, public toastr: ToastrService, public router: Router) { }\n\n  ngOnInit() {\n\n\n    this.userId = Cookie.get(\"receiverId\");\n    this.fullName = Cookie.get(\"receiverName\");\n    this.token = Cookie.get('authToken')\n\n    this.verifyUserConfirmation();\n    this.getOnlineUserList();\n    this.getAllUsers();\n\n    this.getAllIssues()\n\n\n\n    this.newIssueAddedResponse()\n    this.issueUpdatedResponse()\n    this.commentAddedResponse()\n\n  }\n\n  ngOnDestroy() {\n    this.socketService.exitSocket()\n  }\n\n  //for getting all users\n  public getAllUsers = () => {\n    this.appService.getAllpeople(this.token).subscribe((apiResponse: any) => {\n      this.users1 = apiResponse.data;    \n      this.users2=[];\n      for(let user of this.users1){\n        if(`${user.firstName} ${user.lastName}`!=this.fullName){\n          this.users2.push(user)\n        }\n      }\n    })\n  }\n\n\n\n\n  //user confirmation\n\n  public verifyUserConfirmation = () => {\n    this.socketService.verifyUser().subscribe((response) => {\n      this.socketService.setUser(this.token);\n      console.log(\"User is verified\")\n    })\n  }\n\n\n\n  public getOnlineUserList: any = () => {\n\n    this.socketService.onlineUserList()\n      .subscribe((userListfromdb) => {\n\n        this.users = '';\n\n        for (let x in userListfromdb) {\n\n          let temp = { 'userId': x, 'fullName': userListfromdb[x] };\n\n          this.users = temp;\n        }\n\n      });//end subscribe\n\n  }//end getOnlineUserList\n\n\n\n\n  fileEvent(fileInput: any) {\n    const AWSService = AWS;\n    const region = 'us-east-1';\n    const bucketName = 'issue-bucket';\n    const IdentityPoolId = 'us-east-1:52d98cae-8b34-4d73-b9be-4fc95204002d';\n    const file = fileInput.target.files[0];\n    //Configures the AWS service and initial authorization\n    AWSService.config.update({\n      region: region,\n      credentials: new AWSService.CognitoIdentityCredentials({\n        IdentityPoolId: IdentityPoolId\n      })\n    });\n\n    const aws = function () {\n      return new Promise((resolve, reject) => {\n\n        //adds the S3 service, make sure the api version and bucket are correct\n        const s3 = new AWSService.S3({\n          apiVersion: '2006-03-01',\n          params: { Bucket: bucketName }\n        });\n        //I store this in a variable for retrieval later\n        console.log(file);\n\n        s3.upload({ Key: file.name, Bucket: bucketName, Body: file, ACL: 'public-read' }, function (err, data) {\n          if (err) {\n            console.log(err, 'there was an error uploading your file');\n            reject(err)\n          } else {\n            console.log(data, 'File Uploaded');\n            this.image = data.Location;\n            resolve(data)\n          }\n        });\n\n      });\n    }\n\n    aws()\n    .then(response => {\n        this.data=response['Location'];\n        console.log(this.data);\n    })\n    .catch(console.error);\n\n  }\n\n\n\n\n\n  //Getting All Items:\n  public getAllIssues = () => {\n    this.appService.getIssues(this.token).subscribe((apiResponse: any) => {\n\n      this.AllIssues = apiResponse.data\n      \n      //sorting issue which are assigned to me\n      this.assignedIssue=[];\n      this.reportedIssue=[];\n      this.otherUsersRealatedIssue=[];\n\n\n      if(this.AllIssues!=null){\n\n        for(let iss of this.AllIssues){\n          if(this.fullName==iss.assignee){\n            this.assignedIssue.push(iss);\n          }\n        }\n  \n        for(let iss of this.AllIssues){\n          if(this.fullName==iss.reporterName){\n            this.reportedIssue.push(iss);\n          }\n        }\n  \n        for(let iss of this.AllIssues){\n          if(this.fullName!=iss.reporterName && this.fullName!=iss.assignee ){\n            this.otherUsersRealatedIssue.push(iss);\n          }\n        }\n\n      }\n\n\n    }, (err) => {\n      console.log(err);\n    })\n  }\n\n\n  //for creating OR registering new issue\n  public newIssue = () => {\n    this.getAllUsers()\n    if (!this.issueTitle) {\n      this.toastr.warning(\"Issue title is required\");\n    } else if (!this.status) {\n      this.toastr.warning(\"Please select status option\");\n    }\n    else {\n      let values = {\n        issueTitle: this.issueTitle,\n        reporterId: this.userId,\n        reporterName: this.fullName,\n        status: this.status,\n        description: this.description,\n        attachments: this.data,\n        assignee: this.assignee\n\n      }\n\n      this.appService.createIssue(values,this.token).subscribe((apiResponse: any) => {\n\n        if (apiResponse.status == 200) {\n          this.toastr.success(apiResponse.message);\n          this.issueDetails = apiResponse.data;\n          this.newIssueId = apiResponse.data.issueId;\n          this.newIssueStatus = apiResponse.status;\n\n          this.issueTitle = \"\"\n          this.status = \"\"\n          this.description = \"\"\n\n          this.getAllIssues();\n\n          this.socketService.createIssue(this.fullName);\n\n          setTimeout(() => {\n            this.router.navigate([`/issueDetails/${this.newIssueId}`]);\n          }, 1000);\n\n          this.getAllIssues();\n\n        }\n      }, (error) => {\n        console.log(\"Error Occured\")\n      })\n    }\n  }\n\n\n  public newIssueAddedResponse = () => {\n    this.socketService.issueAddedResponse().subscribe((response) => {\n      this.getAllIssues();\n      this.toastr.success(response);\n    })\n  }\n\n\n\n  //listening event for edit title\n\n  public issueUpdatedResponse = () => {\n    this.socketService.issueUpdatedResponse().subscribe((response) => {\n      this.getAllIssues();\n      this.toastr.success(response)\n    })\n  }\n\n\n\n  //listening event for comment on issue\n  public commentAddedResponse = () => {\n    this.socketService.commentAddedResponse().subscribe((response) => {\n      this.getAllIssues();\n      this.toastr.success(response)\n    })\n  }\n\n\n\n  //for sorting\n  public changeOrder(field) {\n    this.sortOrder = !this.sortOrder;\n    this.field = field\n  }\n\n\n\n\n  //Logout:\n  public logout = () => {\n\n    this.appService.logout().subscribe((apiResponse) => {\n\n      if (apiResponse.status === 200) {\n        console.log(\"logout called\")\n        Cookie.delete('authToken');\n\n        Cookie.delete('receiverId');\n\n        Cookie.delete('receiverName');\n\n        this.socketService.disconnectedSocket();//calling the method which emits the disconnect event.\n\n        this.socketService.exitSocket()\n\n        this.router.navigate(['/']);\n\n      } else {\n        this.toastr.error(apiResponse.message)\n      } // end condition\n\n    }, (err) => {\n      this.toastr.error('Internal Server Error occured')\n\n    });\n\n  }\n\n\n}\n","module.exports = \"  .header{\\r\\n    background-color:#db5964;\\r\\n    color: white;\\r\\n    padding: 2%;\\r\\n    text-align: center;\\r\\n  }\\r\\n  .navbar{\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  .user{\\r\\n    background-color:#4eb9c7;\\r\\n    color:black;\\r\\n    padding:5%;\\r\\n    display:block;\\r\\n    width:100%;\\r\\n    font-size:1.2em;\\r\\n    text-align:center;\\r\\n    font-family:sans-serif;\\r\\n  }\\r\\n  .description-window{\\r\\n    margin-top:2%;\\r\\n  }\\r\\n  .edit1{\\r\\n    color: rgb(199, 9, 9);\\r\\n    float:right;\\r\\n    font-size:2em;\\r\\n    cursor:pointer;\\r\\n    padding-right: 0.2em;\\r\\n  }\\r\\n  .edit1:hover{\\r\\n    color: rgb(92, 7, 7);\\r\\n    float:right;\\r\\n    font-size:2em;\\r\\n    cursor:pointer;\\r\\n    padding-right: 0.2em;\\r\\n  }\\r\\n  .fasquare{\\r\\n    float: center;\\r\\n    margin-top:3%;\\r\\n  }\\r\\n  .fasquare:hover{\\r\\n    color:rgb(22, 83, 37);\\r\\n    cursor:pointer;\\r\\n  }\\r\\n  .aside{\\r\\n    background:  #f5f5f5;\\r\\n    overflow:auto;\\r\\n    margin-top:2%;\\r\\n  }\\r\\n  .aside1{\\r\\n    overflow:auto;\\r\\n    margin-top:2%;\\r\\n  }\\r\\n  .comments {\\r\\n    width: 100%;\\r\\n    float: left;\\r\\n    background: #F2F5F8;\\r\\n    border-top-right-radius: 0.3em;\\r\\n    border-bottom-right-radius: 0.3em;\\r\\n    color: #304388;\\r\\n    margin-bottom: 40px;\\r\\n  }\\r\\n  .blankContent{\\r\\n    height: 50vh;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    font-size: 3rem;\\r\\n    color: #999;\\r\\n  }\\r\\n  .scrollbar {\\r\\n    margin-top: 2%;\\r\\n    padding-top: 2%;\\r\\n    padding-right: 2%;\\r\\n   \\r\\n    height: 300px;\\r\\n    background: rgb(175, 241, 250);\\r\\n    overflow-y: scroll;\\r\\n    margin-bottom: 25px;\\r\\n  }\\r\\n  .force-overflow {\\r\\n      min-height: 300px;\\r\\n  }\\r\\n  .textarea{\\r\\n    margin: 2%;\\r\\n    width: 70%\\r\\n  }\\r\\n  /*\\r\\n  for testing\\r\\n  */\\r\\n  .my-comment {\\r\\n    background: #86BB71;\\r\\n    margin: .5%;\\r\\n    border-radius: 7px;\\r\\n    float: right;\\r\\n    padding: 2%;\\r\\n  }\\r\\n  .other-comment {\\r\\n    background: #94C2ED;\\r\\n    margin: .5%;\\r\\n    border-radius: 7px;\\r\\n    float: left;\\r\\n    padding: 2%;\\r\\n\\r\\n  }\\r\\n  .floatLeft{\\r\\n    float: left;\\r\\n  }\\r\\n  .floatRight{\\r\\n    float: right;\\r\\n  }\\r\\n  .fieldName{\\r\\n    color: rgb(3, 2, 3);\\r\\n    float:left\\r\\n  }\\r\\n  .fieldName1{\\r\\n    float: right;\\r\\n  }\\r\\n  table {\\r\\n      font-family: arial, sans-serif;\\r\\n      border-collapse: collapse;\\r\\n      width: 100%;\\r\\n  }\\r\\n  td, th {\\r\\n      border: 1px solid #0a0707;\\r\\n      text-align: left;\\r\\n      padding: 8px;\\r\\n  }\\r\\n  tr:nth-child(even) {\\r\\n      background-color: #a59c9c;\\r\\n  }\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"col-12 header\\\">\\n        <h1>Issue Tracker Tool</h1>\\n    </div>\\n\\n\\n    <!--Modal to update issue-->\\n\\n    <div id=\\\"myModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\"  tabindex=\\\"-1\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header text-center\\\">\\n                    <h4 class=\\\"modal-title w-100 font-weight-bold\\\">Update Issue Details</h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                </div>\\n                <div class=\\\"modal-body mx-3\\\">\\n\\n                    <div class=\\\"md-form mb-5\\\">\\n                      <label data-error=\\\"wrong\\\" data-success=\\\"right\\\">Issue Title</label>\\n                      <input  [(ngModel)]=\\\"issueTitle\\\" type=\\\"Title\\\" class=\\\"form-control validate\\\" required>\\n                    </div>\\n    \\n                    <div class=\\\"md-form mb-4\\\">\\n                        <label data-error=\\\"wrong\\\"  for=\\\"inputGroupSelect01\\\" data-success=\\\"right\\\">Status</label>\\n                        <!--\\n                        <input [(ngModel)]=\\\"status\\\"  type=\\\"status\\\" class=\\\"form-control validate\\\">\\n                        -->\\n                        <select  [(ngModel)]=\\\"status\\\" class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" required>\\n                            <option selected>Choose...</option>\\n                            <option value=\\\"backlog\\\">backlog</option>\\n                            <option value=\\\"in-progress\\\">in-progress</option>\\n                            <option value=\\\"in-test\\\">in-test</option>\\n                            <option value=\\\"done\\\">done</option>\\n                        </select>\\n\\n                    </div>\\n\\n\\n                          \\n                    <div class=\\\"md-form mb-4\\\">\\n                        <label data-error=\\\"wrong\\\" data-success=\\\"right\\\">Description</label>\\n                        <!--\\n                        <textarea [(ngModel)]=\\\"description\\\"  type=\\\"description\\\" class=\\\"form-control validate\\\"></textarea>\\n                        -->\\n                        <app-ngx-editor [placeholder]=\\\"'Enter description here...'\\\" [spellcheck]=\\\"true\\\" [(ngModel)]=\\\"description\\\"></app-ngx-editor>\\n\\n                    </div>\\n\\n\\n                    <div class=\\\"md-form mb-4\\\">\\n                            <label data-error=\\\"wrong\\\"  for=\\\"inputGroupSelect01\\\" data-success=\\\"right\\\">Assignee</label>\\n                            <select  [(ngModel)]=\\\"assignee\\\" class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" required>\\n                                    <option selected>Choose...</option>\\n                                        <!--\\n                                        <option  *ngFor=\\\"let user of users1\\\" value=\\\"{{user.firstName}} {{user.lastName}}\\\">\\n                                            <p *ngIf=\\\"user.firstName+' '+user.lastName!=fullName\\\">{{user.firstName}} {{user.lastName}}</p>\\n                                        </option>\\n                                        -->\\n                                    \\n                                        <option  *ngFor=\\\"let user of users2\\\" value=\\\"{{user.firstName}} {{user.lastName}}\\\">\\n                                            <p>{{user.firstName}} {{user.lastName}}</p>\\n                                        </option>\\n                                    \\n\\n\\n                            </select>\\n    \\n                    </div>\\n\\n\\n                    \\n                </div>\\n                <div class=\\\"modal-footer d-flex justify-content-center\\\">\\n                    <button class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\" (click)=\\\"updateIssue()\\\">Save Details</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n\\n\\n\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-3 aside\\\">\\n          <span class=\\\"user\\\" >\\n              <b>{{fullName}}</b><br>\\n              <small style=\\\"font-weight:bold;\\\">Issue Tracker Tool</small>\\n          </span>\\n          <div col-sm-12>\\n              \\n              <button type=\\\"button\\\" routerLink=\\\"/dashboard\\\" class=\\\"btn btn-success fasquare\\\">Back To Dashboard</button>\\n\\n          </div>\\n          <hr class=\\\"lead\\\">      \\n      </div>\\n\\n      <div class=\\\"col-lg-8 card text-center description-window\\\" style=\\\"background-color:bisque\\\">\\n        <div class=\\\"card-header\\\" *ngIf='issueDetails'>\\n            <u><h3 style=\\\"color:rgb(17, 8, 1)\\\">Issue Description View</h3></u>\\n            <i class=\\\"fa fa-edit edit1\\\" title=\\\"Edit Issue Details\\\"  data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\" (click)=\\\"setIssueDetails(issueDetails.issueId,issueDetails.issueTitle,issueDetails.status,issueDetails.description,issueDetails.assignee)\\\"></i>\\n        </div>\\n\\n        <div class=\\\"card-body\\\" *ngIf='issueDetails'>\\n                    \\n            <div class=\\\"table-responsive-lg\\\">\\n                <table class=\\\"table\\\">\\n\\n                    <tbody>\\n                    <tr>\\n                        <th scope=\\\"row\\\">Issue Title</th>\\n                        <td><b class=\\\"fieldName1\\\">{{issueDetails.issueTitle}}</b></td>\\n                    </tr>\\n                    <tr>\\n                        <th scope=\\\"row\\\">Status of Bug</th>\\n                        <td><b class=\\\"fieldName1\\\">{{issueDetails.status}}</b></td>\\n                    </tr>\\n                    <tr>\\n                        <th scope=\\\"row\\\">Reporter</th>\\n                        <td><b class=\\\"fieldName1\\\">{{issueDetails.reporterName}}</b></td>\\n                    </tr>\\n                    <tr>\\n                        <th scope=\\\"row\\\">Assignee</th>\\n                        <td><b class=\\\"fieldName1\\\">{{issueDetails.assignee}}</b></td>\\n                    </tr>\\n                    <tr>\\n                        <th scope=\\\"row\\\">Description</th>\\n                        <td><p class=\\\"fieldName1\\\" [innerHTML]=\\\"issueDetails.description\\\">{{issueDetails.description}}</p></td>\\n                    </tr>\\n                    <tr>\\n                        <th scope=\\\"row\\\">Date of Registration</th>\\n                        <td><b class=\\\"fieldName1\\\">{{issueDetails.reportedOn |  date:'medium' }}</b></td>\\n                    </tr>    \\n                    <tr>\\n                        <th scope=\\\"row\\\">Attachments</th>\\n                        <td><a href=\\\"{{issueDetails.attachments}}\\\" target=\\\"_blank\\\" class=\\\"fieldName1\\\" title=\\\"Click here to download\\\">attached-file</a></td>\\n                    </tr>    \\n                \\n                \\n                    </tbody>\\n                </table>\\n                \\n            </div>\\n\\n\\n        \\n            <h5 class=\\\"card-title\\\"><u class=\\\"fieldName\\\">Comments</u></h5><br><br>\\n            <div class=\\\"col-12 col-sm-12 col-md-12 comments \\\">\\n\\n                <div class=\\\"scrollbar scrollbar-primary\\\">\\n                    <div class=\\\"force-overflow\\\">\\n                        <div *ngFor=\\\"let comment of AllCommentsOfIssue\\\">\\n                            <div *ngIf=\\\"comment\\\">\\n                                <span [ngClass]=\\\"{'floatRight': comment.userId == userId, 'floatLeft': comment.userId != userId}\\\">{{comment.commentedOn |  date}}</span><br>\\n                                <span [ngClass]=\\\"{'my-comment': comment.userId == userId, 'other-comment': comment.userId != userId}\\\">{{comment.comment}}</span><br>\\n                                <span [ngClass]=\\\"{'floatRight': comment.userId == userId, 'floatLeft': comment.userId != userId}\\\">{{comment.userName}}</span><br><br><br>\\n                            </div>\\n                        </div>    \\n                        <div *ngIf=\\\"!AllCommentsOfIssue\\\" class=\\\"col-sm blankContent\\\">\\n                                <span>Comment Not Available</span><br>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n                <div class=\\\"row\\\"> \\n                        <textarea class=\\\"textarea\\\"  [(ngModel)]=\\\"comment\\\" placeholder=\\\"Type your comment\\\"></textarea>\\n                        \\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"margin:2%\\\" (click)=addNewComment()>Send</button>\\n\\n                </div>\\n            </div>\\n\\n            <h5 class=\\\"card-title col-sm-12\\\"><u class=\\\"fieldName\\\">Watchers</u></h5><br><hr><br>\\n            <div class=\\\"col-sm-12 floatLeft\\\" *ngIf=\\\"issueDetails.watchers\\\">\\n                <p *ngFor=\\\"let watcher of issueDetails.watchers; let i = index\\\">\\n                    <b>{{i+1}}. {{watcher.watcherName}}</b>\\n                </p>\\n            </div>\\n\\n\\n\\n        </div>\\n\\n\\n        <div class=\\\"card-footer\\\">\\n            <a class=\\\"btn btn-primary\\\"(click)=addAsWatcher(issueId)>Watch</a>\\n        </div>\\n      </div>\\n\\n\\n\\n\\n    </div>\\n\\n\\n</div>\\n\\n\\n\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AppService } from '../../app.service';\nimport { ToastrService } from 'ngx-toastr';\n\n\nimport { Cookie } from 'ng2-cookies';\n\nimport { SocketService } from './../../socket.service'\n\n\n@Component({\n  selector: 'app-issue-view',\n  templateUrl: './issue-view.component.html',\n  styleUrls: ['./issue-view.component.css'],\n  providers:[SocketService]\n})\nexport class IssueViewComponent implements OnInit , OnDestroy{\n\n  \n  public AllCommentsOfIssue: any;\n  public comment: any;\n  public AllIssues: any;\n  public description: any;\n  public assignee: any;\n  public status: any;\n  public users: any;\n  public users1:any=[];\n  public users2:any=[];\n\n\n  \n  public issueDetails:any=[];\n\n  public userId:any;\n  public fullName:any;\n  public token:any;\n\n  public issueId:any;\n  public issueTitle:any;\n\n  constructor(public socketService: SocketService, public appService: AppService, public _route: ActivatedRoute, public _router: Router,public toastr: ToastrService) { }\n\n    ngOnInit() {\n\n\n      this.userId = Cookie.get(\"receiverId\");\n      this.fullName = Cookie.get(\"receiverName\");\n      this.token = Cookie.get('authToken')\n\n      let issueId = this._route.snapshot.paramMap.get('issueId');\n\n      this.appService.getIssue(issueId,this.token).subscribe(\n        (apiResponse: any) => {\n\n          this.issueDetails = apiResponse.data\n          this.issueId=this.issueDetails.issueId;\n        }, (err) => {\n          console.log(err);\n        }\n\n      )\n\n      this.issueUpdatedResponse();\n      this.newIssueAddedResponse()\n\n      this.getAllIssues()\n      this.getAllCommentsOnIssue();\n      this.commentAddedResponse();\n\n      this.responseAlreadyWatcher();\n      this.save_watch()\n\n      this.getIssue()\n\n    }\n\n\n\n\n    ngOnDestroy() {\n      this.socketService.exitSocket()\n    }\n\n\n  //for getting all users\n  public getAllUsers = () => {\n    this.appService.getAllpeople(this.token).subscribe((apiResponse: any) => {\n      this.users1 = apiResponse.data;\n      //  this.requests = apiResponse.data.requests;\n      this.users2=[];\n\n      for(let user of this.users1){\n        if(`${user.firstName} ${user.lastName}`!=this.fullName){\n          this.users2.push(user)\n        }\n      }\n\n    })\n  }\n\n\n\n  \n  //user confirmation\n\n  public verifyUserConfirmation = () => {\n    this.socketService.verifyUser().subscribe((response) => {\n      this.socketService.setUser(this.token);\n      console.log(\"User is verified\")\n    })\n  }\n\n\n  \n  public getOnlineUserList: any = () => {\n\n    this.socketService.onlineUserList()\n      .subscribe((userListfromdb) => {\n\n        this.users = '';\n\n        for (let x in userListfromdb) {\n\n          let temp = { 'userId': x, 'fullName': userListfromdb[x] };\n\n          this.users=temp;\n        }\n\n      });//end subscribe\n\n  }//end getOnlineUserList\n\n\n\n\n  //Getting All Items:\n  public getAllIssues = () => {\n    this.appService.getIssues(this.token).subscribe((apiResponse: any) => {\n\n      this.AllIssues = apiResponse.data\n    }, (err) => {\n      console.log(err);\n    })\n  }\n\n\n\n\n\n  public getIssue=()=>{\n\n    let issueId = this._route.snapshot.paramMap.get('issueId');\n\n    this.appService.getIssue(issueId,this.token).subscribe(\n      (apiResponse: any) => {\n\n        this.issueDetails = apiResponse.data\n        this.issueId=this.issueDetails.issueId;\n      }, (err) => {\n        console.log(err);\n      }\n\n    )\n  }\n\n\n\n  //Getting All Items:\n  public getAllCommentsOnIssue = () => {\n    let issueId = this._route.snapshot.paramMap.get('issueId');\n\n    //console.log(this.issueId)\n    this.appService.getAllCommentOnIssue(issueId,this.token).subscribe((apiResponse: any) => {\n\n      this.AllCommentsOfIssue=apiResponse.data\n    }, (err) => {\n      console.log(err);\n    })\n  }\n\n\n\n\n  //Update a issue details for all users:\n  public setIssueDetails = (issueId, issueTitle,status,description,assignee) => {\n    this.getAllUsers()\n    this.issueId = issueId\n    this.issueTitle = issueTitle\n    this.status=status\n    this.description=description\n    this.assignee=assignee\n  }\n\n\n  public updateIssue = () => {\n    let data = {\n      issueTitle: this.issueTitle,\n      issueId: this.issueId,\n      status:this.status,\n      description:this.description,\n      assignee:this.assignee\n    }\n    this.appService.editIssue(data,this.token).subscribe((apiResponse: any) => {\n      this.getIssue();\n      this.socketService.updateIssue(this.fullName)\n    }, (err) => {\n      this.toastr.error(`Unable to update Issue details`)\n    })\n\n  }\n\n  public issueUpdatedResponse = () => {\n    this.socketService.issueUpdatedResponse().subscribe((response) => {\n      this.toastr.success(response)\n      this.getIssue();\n    })\n  }\n\n\n  //listening event for add issue  \n  public newIssueAddedResponse = () => {\n    this.socketService.issueAddedResponse().subscribe((response) => {\n      this.toastr.success(response);\n    })\n  }\n\n\n\n\n  //for creating OR registering new issue\n  public addNewComment = () => {\n    if (!this.comment) {\n      this.toastr.warning(`Please enter comment`);\n    }\n    else {\n      let values = {\n        issueId: this.issueId,\n        userId: this.userId,\n        userName: this.fullName,\n        comment:this.comment\n\n      }\n\n      this.appService.addComment(values,this.token).subscribe((apiResponse: any) => {\n\n        if (apiResponse.status == 200) {\n          this.toastr.success(apiResponse.message);\n          this.comment = \"\"\n          this.getAllCommentsOnIssue()\n          this.socketService.addComment(this.fullName)\n        }\n      }, (error) => {\n        console.log(`Error Occured`)\n      })\n    }\n  }\n\n\n\n  public commentAddedResponse = () => {\n    this.socketService.commentAddedResponse().subscribe((response) => {\n      this.toastr.success(response)\n      this.getAllCommentsOnIssue();\n    })\n  }\n\n\n\n\n  //watch related functionalities\n\n    public addAsWatcher = (issueId) => {\n      let data = {\n        issueId:issueId,\n        watcherId: this.userId,\n        watcherName: this.fullName\n      }\n\n      this.socketService.addAsWatcher(data)\n      this.getIssue();\n      this.getAllIssues();\n    }\n  \n    public responseAlreadyWatcher = () => {\n      this.socketService.responseAlreadyWatcher().subscribe((response) => {\n        this.toastr.error(response)\n      })\n    }\n  \n    public save_watch = () => {\n      this.socketService.save_watch().subscribe((response) => {\n        this.toastr.success(response);\n        this.getAllUsers();\n        this.getIssue();\n      })\n    }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\nimport { ToastrService } from 'ngx-toastr';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrackerRouteGuardService implements CanActivate {\n\n  constructor(private router: Router, public toastr: ToastrService) { }\n\n\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n\n    console.log(\"in guard service\");\n\n    if (Cookie.get('authToken') === undefined || Cookie.get('authToken') === '' || Cookie.get('authToken') === null) {\n      this.toastr.error(\"Token Expired, Please login again\");\n      this.router.navigate(['/']);\n\n      return false;\n\n    } else {\n\n      return true;\n\n    }\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IssueViewComponent } from './issue-view/issue-view.component';\n\nimport {NgxPaginationModule} from 'ngx-pagination'; \nimport { SortByPipe } from './../sort-by.pipe';\n\nimport { FilterPipeModule } from 'ngx-filter-pipe';\n\nimport { NgxEditorModule } from 'ngx-editor';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n\nimport { SocketService } from './../socket.service'\n\nimport { TrackerRouteGuardService } from './tracker-route-guard.service'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxPaginationModule,\n    FormsModule ,\n    FilterPipeModule,\n    NgxEditorModule,\n    TooltipModule.forRoot(),\n    RouterModule.forChild([\n      {path:'dashboard',component:DashboardComponent, canActivate:[TrackerRouteGuardService]},\n      {path:'issueDetails/:issueId',component:IssueViewComponent, canActivate:[TrackerRouteGuardService]}\n    ])\n  ],\n  declarations: [DashboardComponent, IssueViewComponent, SortByPipe],\n  providers:[TrackerRouteGuardService]\n})\nexport class TrackerModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div *ngIf=\\\"success==1\\\">\\n    <div class=\\\"row mt-5\\\">\\n\\n    </div>\\n    <div class=\\\"row mt-4\\\">\\n      <div class=\\\"col-12 text-center\\\">\\n        <h2 class=\\\"text-success\\\">\\n          <i class=\\\"fa fa-check-circle\\\"></i>Email Verified!</h2>\\n        <h5 class=\\\"text-danger\\\">Thanks for signing up in TO-DO Application. Please\\n          <a [routerLink]=\\\"['/login']\\\">Login</a>\\n        </h5>\\n      </div>\\n    </div>\\n  </div>\\n  <!--success end-->\\n  <!---failure start-->\\n  <div *ngIf=\\\"failure==1\\\">\\n    <div class=\\\"row mt-5\\\">\\n\\n    </div>\\n    <div class=\\\"row mt-4\\\">\\n      <div class=\\\"col-12 text-center\\\">\\n        <h2 class=\\\"text-danger\\\">\\n          <i class=\\\"fa fa-times-circle\\\"></i>Email Not Verified!</h2>\\n        <h5 class=\\\"text-danger\\\">Oops!Some Error Occured!.Please again\\n          <a [routerLink]=\\\"['/signup']\\\">SignUp</a>\\n        </h5>\\n      </div>\\n    </div>\\n\\n  </div>\\n  <!-- failure end -->\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AppService } from './../../app.service';\n\n@Component({\n  selector: 'app-email-verify',\n  templateUrl: './email-verify.component.html',\n  styleUrls: ['./email-verify.component.css']\n})\nexport class EmailVerifyComponent implements OnInit {\n\n  public data :any;\n  public success:number;\n  public failure:number;\n\n  constructor(\n    private route: ActivatedRoute, private router: Router,public appService: AppService\n  ) { }\n\n  ngOnInit() {\n    this.data = this.route.snapshot.paramMap.get('userId');\n    this.appService.verifyEmail(this.data).subscribe(\n      Response => {\n        if (Response.status === 200) {\n          this.success=1;\n        }\n        else{\n          this.failure=1;\n        }\n        },\n      error => {\n       \n       \n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">Issue Tracker Tool</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n\\n    <ul class=\\\"navbar-nav\\\">\\n\\n      <li class=\\\"nav-item\\\">\\n\\n        <a class=\\\"nav-link\\\" (click)=\\\"goToSignUp()\\\">Signup</a>\\n\\n      </li>\\n\\n    </ul>\\n\\n  </div>\\n\\n</nav>\\n\\n<div class=\\\"row p-0 m-0\\\">\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n  <div class=\\\"col-sm p-5\\\">\\n\\n    <h2 class=\\\"form-signin-heading\\\">Email Address</h2>\\n\\n    <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n\\n    <input type=\\\"email\\\" #emailId=\\\"ngModel\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Email address\\\" required autofocus>\\n\\n    <br>\\n\\n    <div [hidden]=\\\"emailId.valid || emailId.pristine\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"emailId.errors?.pattern\\\">\\n       Warning : Email is invalid!\\n\\n      </div>\\n      <div *ngIf=\\\"emailId.errors?.required\\\">\\n       Warning : Email is required!\\n      </div>\\n    </div>\\n\\n\\n\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"sendResetLinkFunction()\\\">Send Reset Link</button>\\n\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n//for Service\nimport { AppService } from '../../app.service';\n//for routing\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  public email : String;\n\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  public sendResetLinkFunction : any = () => {\n\n    if (!this.email) {\n      this.toastr.warning('enter email address')\n    }\n    this.appService.sendResetLink(this.email)\n      .subscribe((apiResponse) => {\n        if (apiResponse.status == 200) {\n          this.toastr.success(\"Reset Link Sent SuccessFully\", \"Success!\");\n          setTimeout(() => {\n            this.router.navigate(['/login']);\n          }, 2000);\n        }\n        else {\n          this.toastr.error(apiResponse.message, \"Error! Try Again\");\n        }\n      },\n        (error) => {\n          this.toastr.error(\"Some Error Occurred\", \"Error!\");\n        });\n\n  }//end of sendResetLink \n\n\n  public goToSignUp() {\n    this.router.navigate(['/signup']);\n  }//end goToSignUp\n\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">Issue Tracker Tool</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n\\n    <ul class=\\\"navbar-nav\\\">\\n\\n      <li class=\\\"nav-item\\\">\\n\\n        <a class=\\\"nav-link\\\" style=\\\"cursor: pointer\\\" (click) = \\\"goToSignUp()\\\" >SignUp</a>\\n\\n      </li>\\n\\n    </ul>\\n\\n  </div>\\n\\n</nav>\\n\\n<div class=\\\"row p-0 m-0\\\">\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n  <div class=\\\"col-sm p-5\\\">\\n\\n    <h2 class=\\\"form-signin-heading\\\">Please sign in</h2>\\n\\n    <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n\\n    <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Email address\\\" required autofocus>\\n\\n    <br>\\n\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n\\n    <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\"  (keydown)=\\\"doLoginUsingKeypress($event)\\\" required>\\n\\n    <br>\\n\\n\\n    <a [routerLink]=\\\"['/forgot-password']\\\">Forgot Password ?</a>\\n\\n    <br><br>\\n\\n\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click) = \\\"signinFunction()\\\" >Sign in</button>\\n\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { AppService } from './../../app.service';\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n\n//for loading spinner\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  public email: any;\n  public password: any;\n\n  constructor(\n    public appService: AppService,\n    public router: Router,\n    private toastr: ToastrService,\n    private spinnerService: Ng4LoadingSpinnerService\n  ) { }\n\n  ngOnInit() {\n  }\n\n\n  public goToSignUp: any = () => {\n\n    this.router.navigate(['/signup']);\n\n  } // end goToSignUp\n\n  public signinFunction: any = () => {\n\n    if (!this.email) {\n    \n      this.toastr.warning('enter email')\n  \n    } else if (!this.password) {\n\n      this.toastr.warning('enter password')\n\n    } else {\n\n      let data = {\n        email: this.email,\n        password: this.password\n      }\n\n      this.spinnerService.show();\n      this.appService.signinFunction(data)\n        .subscribe((apiResponse) => {\n          console.log(apiResponse)\n              if (apiResponse.status === 200) {\n\n                Cookie.set('authToken', apiResponse.data.authToken);\n                Cookie.set('receiverId', apiResponse.data.userDetails.userId);\n                Cookie.set('receiverName', apiResponse.data.userDetails.firstName + ' ' + apiResponse.data.userDetails.lastName);\n                this.appService.setUserInfoInLocalStorage(apiResponse.data.userDetails)\n                \n                //   this.router.navigate(['/']);\n\n                setTimeout(()=>{\n                  this.spinnerService.hide();\n                  this.router.navigate(['/dashboard']);\n                },1000)\n\n              }\n              else {\n                setTimeout(()=>{\n                  this.spinnerService.hide();\n                  this.toastr.error(apiResponse.message);\n                },1000);\n              }\n\n        }, (err) => {\n\n          if(err.status == 404){\n            setTimeout(() => {\n              this.spinnerService.hide();\n              this.router.navigate(['/page-not-found']);\n  \n            },1000);\n          \n          }\n          else if(err.status == 500){\n            setTimeout(()=>{\n              this.spinnerService.hide();\n              this.router.navigate(['/server-error']);\n            },1000)\n            \n          }\n          else if(err.status == 400){\n            setTimeout(()=>{\n              this.spinnerService.hide();\n              this.toastr.error('Password incorrect')\n            })\n\n          }else{\n            setTimeout(()=>{\n              this.spinnerService.hide();\n              this.router.navigate(['/signup']);\n              this.toastr.error('Please, create account')\n            })\n\n          }\n\n\n        });\n\n    } // end condition\n\n  } // end signinFunction\n\n\n  public doLoginUsingKeypress: any = (event: any) => {\n\n    if (event.keyCode === 13) { // 13 is keycode of enter.\n\n      this.signinFunction();\n\n    }\n\n  } // end sendMessageUsingKeypress\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">Issue Tracker Tool</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n\\n    <ul class=\\\"navbar-nav\\\">\\n\\n      <li class=\\\"nav-item\\\">\\n\\n        <a class=\\\"nav-link\\\" (click)=\\\"goToSignUp()\\\">Sign-Up</a>\\n\\n      </li>\\n\\n    </ul>\\n\\n  </div>\\n\\n</nav>\\n\\n<div class=\\\"row p-0 m-0\\\">\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n  <div class=\\\"col-sm p-5\\\">\\n\\n    <h2 class=\\\"form-signin-heading\\\">Password Reset</h2>\\n\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n\\n    <input type=\\\"password\\\" #pass=\\\"ngModel\\\" pattern=\\\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\"\\n      [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\" required>\\n\\n    <br>\\n    <div [hidden]=\\\"pass.valid || pass.pristine\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"pass.errors?.pattern\\\">\\n        Warning : Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters!\\n      </div>\\n      <div *ngIf=\\\"pass.errors?.required\\\">\\n        Warning : Password is required!\\n      </div>\\n    </div>\\n\\n\\n\\n\\n\\n\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Confirm Password</label>\\n\\n    <input type=\\\"password\\\" #conPass=\\\"ngModel\\\" id=\\\"inputPassword1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\"\\n      required>\\n\\n    <br>\\n\\n    <div [hidden]=\\\"conPass.pristine || password==confirmPassword\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"password!=confirmPassword\\\">\\n        Warning : Password and Confirm Password does not match!\\n      </div>\\n      <div *ngIf=\\\"conPass.errors?.required\\\">\\n        Warning: Confirm Password is required!\\n      </div>\\n    </div>\\n\\n\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"resetPassword()\\\">Change Password</button>\\n\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n//for Service\nimport { AppService } from '../../app.service';\n//for routing\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  public password: string;\n  public confirmPassword: string;\n\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  public userId: string = this._route.snapshot.paramMap.get('userId');\n\n  public data: any = {};\n\n  public resetPassword = () => {\n\n    if (this.matchPassword()) {\n      this.data.userId = this.userId;\n      this.data.password = this.password;\n      this.appService.resetPassword(this.data)\n        .subscribe((apiResponse) => {\n          if (apiResponse.status == 200) {\n            this.toastr.success(\"Password Reset Succesfull\", \"Success!\");\n            setTimeout(() => {\n              this.router.navigate(['/']);\n            }, 2000);\n          }\n          else {\n            this.toastr.error(apiResponse.message, \"Error!\");\n          }\n        },\n          (error) => {\n            this.toastr.error(\"Some Error Occurred\", \"Error!\");\n          });\n    }\n    else {\n      this.toastr.error(\"Password Mismatch\", \"Error!\");\n    }\n  }\n\n  public matchPassword = () => {\n    if (this.password === this.confirmPassword) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }//end matchPassword\n\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">Issue Tracker Tool</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n\\n      <li class=\\\"nav-item\\\">\\n\\n        <a class=\\\"nav-link\\\" style=\\\"cursor: pointer\\\" (click)=\\\"goToSignIn()\\\">SignIn</a>\\n\\n      </li>\\n\\n    </ul>\\n\\n  </div>\\n\\n</nav>\\n\\n<div class=\\\"row p-0 m-0\\\">\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n  <div class=\\\"col-sm p-5\\\">\\n\\n    <h2 class=\\\"form-signin-heading\\\">Sign Up To Register your Issue</h2>\\n\\n    <br>\\n\\n    <span>FirstName: </span>\\n\\n    <label for=\\\"inputFirstName\\\" class=\\\"sr-only\\\">FirstName</label>\\n\\n    <input type=\\\"text\\\" #first=\\\"ngModel\\\" pattern=\\\"^[A-Z][A-za-z ]+$\\\" minlength=\\\"2\\\" id=\\\"inputFirstName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"firstName\\\" placeholder=\\\"FirstName\\\" required autofocus>\\n\\n    <br>\\n    <div [hidden]=\\\"first.pristine || first.valid\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"first.errors?.pattern\\\">\\n        Warning : Please tart with Capital and contain only letters !\\n            <div *ngIf=\\\"first.errors?.minlength\\\">\\n              Warning : Minimum 2 letters required!\\n            </div>\\n      </div>\\n      <div *ngIf=\\\"first.errors?.required\\\">\\n        Warning : First Name is required!\\n      </div>\\n\\n    </div>\\n\\n\\n\\n    <span>LastName: </span>\\n\\n    <label for=\\\"inputLastName\\\" class=\\\"sr-only\\\">LastName</label>\\n\\n    <input type=\\\"text\\\" #last=\\\"ngModel\\\" pattern=\\\"^[A-Z][A-za-z ]+$\\\" minlength=\\\"2\\\" id=\\\"inputLastName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"lastName\\\" placeholder=\\\"LastName\\\" required>\\n\\n    <br>\\n\\n    <div [hidden]=\\\"last.pristine || last.valid\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"last.errors?.pattern\\\">\\n        Warning : Please tart with Capital and contain only letters !\\n        <div *ngIf=\\\"last.errors?.minlength\\\">\\n          Warning : Minimum 2 letters required!\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"last.errors?.required\\\">\\n        Warning : Last Name is required!\\n      </div>\\n\\n    </div>\\n<!--\\n    <span>Mobile: </span>\\n\\n    <label for=\\\"inputMobile\\\" class=\\\"sr-only\\\">Mobile</label>\\n\\n    <input type=\\\"number\\\" id=\\\"inputMobileNumber\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"mobileNumber\\\" placeholder=\\\"Mobile Number\\\" required>\\n-->\\n\\n    <span>Email: </span>\\n\\n    <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n\\n    <input type=\\\"email\\\" #emailId=\\\"ngModel\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Email address\\\" required>\\n\\n    <br>\\n    <div [hidden]=\\\"emailId.valid || emailId.pristine\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"emailId.errors?.pattern\\\">\\n       Warning : Email is invalid!\\n\\n      </div>\\n      <div *ngIf=\\\"emailId.errors?.required\\\">\\n       Warning : Email is required!\\n      </div>\\n    </div>\\n\\n    <span>Password: </span>\\n\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n\\n    <input type=\\\"password\\\" #pass=\\\"ngModel\\\" pattern=\\\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\" required>\\n\\n    <br>\\n    <div [hidden]=\\\"pass.valid || pass.pristine\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"pass.errors?.pattern\\\">\\n       Warning : Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters!\\n      </div>\\n      <div *ngIf=\\\"pass.errors?.required\\\">\\n       Warning : Password is required!\\n      </div>\\n    </div>\\n\\n\\n    <span class=\\\"sub-heading\\\">Confirm Password: </span>\\n\\n    <label for=\\\"inputConPassword\\\" class=\\\"sr-only\\\">Confirm Password</label>\\n\\n    <input type=\\\"password\\\" #conPass=\\\"ngModel\\\"  id=\\\"inputConPassword\\\" class=\\\"form-control\\\" name=\\\"conPass\\\" [(ngModel)]=\\\"confirmPassword\\\"\\n      placeholder=\\\"Confirm Password\\\" required>\\n\\n    <br>\\n   \\n    <div [hidden]=\\\"conPass.pristine || password==confirmPassword\\\" class=\\\"alert alert-danger\\\">\\n       <div *ngIf=\\\"password!=confirmPassword\\\">\\n          Warning : Password and Confirm Password does not match!\\n       </div>\\n      <div *ngIf=\\\"conPass.errors?.required\\\">\\n          Warning: Confirm Password is required!\\n      </div>\\n    </div>\\n\\n    <span class=\\\"sub-heading\\\">Country: </span>\\n\\n    <label for=\\\"inputCountry\\\" class=\\\"sr-only\\\">Country</label>\\n    \\n    <select [(ngModel)]=\\\"countryName\\\" #Country=\\\"ngModel\\\"  name=\\\"countryName\\\" class=\\\"form-control\\\" \\n    id=\\\"inputCountry\\\" (change)=\\\"onChange()\\\" required>\\n       <option value=\\\"\\\" >Select</option>\\n      <option *ngFor=\\\"let country of finalCountryList\\\" [value]=\\\"country.key\\\">{{country.value}}</option>\\n    </select>\\n      <br>\\n      <div [hidden]=\\\"Country.valid || Country.pristine  \\\" class=\\\"alert alert-danger\\\">\\n      ** Country Name is required \\n      </div>\\n    \\n\\n    <span class=\\\"sub-heading\\\">Mobile: </span>\\n\\n    <label for=\\\"inputMobile\\\" class=\\\"sr-only\\\">Mobile</label>\\n    <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-text\\\">+{{code}}</div>\\n        <input type=\\\"number\\\" #mobileNum=\\\"ngModel\\\" pattern=\\\"^\\\\d{10}$\\\" id=\\\"inputMobile\\\" class=\\\"form-control\\\" name=\\\"mobile\\\" [(ngModel)]=\\\"mobile\\\"\\n        placeholder=\\\"Mobile\\\" required>\\n      </div>\\n \\n\\n    <br>\\n    <div [hidden]=\\\"mobileNum.valid || mobileNum.pristine\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"mobileNum.errors?.pattern\\\">\\n        Mobile Number should only start contain only 10 digits!\\n\\n      </div>\\n      <div *ngIf=\\\"mobileNum.errors?.required\\\">\\n        Mobile Number is required!\\n      </div>\\n    </div>\\n\\n\\n\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"signupFunction()\\\">Sign Up</button>\\n\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\\n\\n\\n\"","import { Component, OnInit,ViewContainerRef } from '@angular/core';\nimport { AppService } from './../../app.service';\nimport { Router } from '@angular/router';\n\nimport { SortCountriesPipe } from '../../sort-countries.pipe';\n\n\n\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n\n//for spinner loading\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\n\n \n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  public firstName: any;\n  public lastName: any;\n  public mobileNumber: number;\n  public email: any;\n  public password: any;\n  public countryName: any =\"\";\n  public countryList:any;\n  public finalCountryList:any=[];\n  public codeList:any=[];\n  public code:any;\n\n  constructor(  \n    public appService: AppService,\n    public router: Router,\n    private toastr: ToastrService,\n    public sortCountries : SortCountriesPipe,\n    private spinnerService: Ng4LoadingSpinnerService\n  ){\n\n  } \n\n  ngOnInit() {\n\n    this.appService.getCountryList().subscribe(\n      Response=>{\n         this.countryList=Response;\n         for (var prop in this.countryList) {\n          this.finalCountryList.push({\n            'key': prop,\n            'value': this.countryList[prop]\n        });\n\n         }\n        this.finalCountryList=this.sortCountries.transform(this.finalCountryList);\n       \n      }\n    )\n\n  }\n\n  public goToSignIn: any = () => {\n\n    this.router.navigate(['/']);\n\n  } // end goToSignIn\n\n  \n  public signupFunction: any = () => {\n\n    if (!this.firstName) {\n      this.toastr.warning('enter first name')\n  \n    } else if (!this.lastName) {\n      this.toastr.warning('enter last name')\n\n    }else if (!this.email) {\n      this.toastr.warning('enter email')\n\n    } else if (!this.password) {\n      this.toastr.warning('enter password')\n     \n    }else if (!this.password) {\n      this.toastr.warning('Select country')\n     \n    }else {\n\n      let data = {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        email: this.email,\n        password: this.password,\n        mobileNumber: `+${this.code}-${this.mobileNumber}`,\n        country: this.countryName\n      }\n\n      this.spinnerService.show();\n      this.appService.signupFunction(data)\n        .subscribe((apiResponse) => {\n\n          console.log(apiResponse);\n\n          if (apiResponse.status === 200) {\n            this.spinnerService.hide();\n            this.toastr.success('Account Created');\n            this.toastr.warning('Check for Email ID confirmation mail!')\n            setTimeout(() => {\n\n              this.goToSignIn();\n\n            }, 2000);\n\n          }\n          else if(apiResponse.status==404){\n            setTimeout(() => {\n              this.spinnerService.hide();\n              this.router.navigate(['/page-not-found']);\n  \n            },1000);\n           \n          }\n          else if(apiResponse.status==500){\n            setTimeout(()=>{\n              this.spinnerService.hide();\n              this.router.navigate(['/server-error']);\n            },1000)\n            \n          }\n          else {\n\n            this.toastr.error(apiResponse.message,'error occured');\n\n          }\n\n        }, (err) => {\n\n          this.toastr.error('Try Again','Error!');\n\n        });\n\n    } // end condition\n\n  } // end signupFunction\n\n\n  public onChange=()=>{  \n    this.appService.getCountryCode().subscribe(\n      Response=>{\n        this.codeList=Response;\n       \n        this.code=this.codeList[this.countryName];\n  \n      }\n    )\n  }//end\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { EmailVerifyComponent } from './email-verify/email-verify.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([\n      {path:'signup',component:SignupComponent},\n      {path:'forgot-password', component:ForgotPasswordComponent},\n      {path:'email-verify/:userId' ,component: EmailVerifyComponent},\n      {path:'reset-password/:userId',component:ResetPasswordComponent}\n    ])\n  ],\n  declarations: [LoginComponent, SignupComponent, ForgotPasswordComponent, EmailVerifyComponent, ResetPasswordComponent]\n})\nexport class UserModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}